---
# BUGS:
# Installs WordPress into /var/www/html/wordpress, we want /var/www/html.
# Security exposure: where is the DB password visible?
#
# TODO:
# Fix permissions on WordPress files
# HTTPS support - security group and wp install
# Experimental "restore from XML"...needs wp-cli to install the right module
# Experimental Google Analytics support
#
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Minimal Wordpress install, single instance'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: kp-2
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
    - t2.nano
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 86.24.77.171/32
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUser:
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '6'
    MaxLength: '41'
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters, min length 6.
  DBRootPassword:
    NoEcho: 'true'
    Description: MySQL root password
    Type: String
    MinLength: '6'
    MaxLength: '41'
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters, min length 6.
Mappings:
### These need updating
  AWSRegion2AMI:
    eu-west-1:
      AMI: ami-f9dd458a
    eu-west-2:
      AMI: ami-886369ec
Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80, SSH from SSHLocation
        + SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          wordpress_install:
          - install_wordpress
          - configure_wordpress
        install_wordpress:
          packages:
            yum: # this is OK for dev, need specific versions for prod
              php: []
              php-mysql: []
              mysql: []
              mysql-server: []
              mysql-devel: []
              mysql-libs: []
              httpd: []
          sources:
            "/var/www/html": http://wordpress.org/latest.tar.gz
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              mysqld:
                enabled: 'true'
                ensureRunning: 'true'
        configure_wordpress:
          commands:
            01_set_mysql_root_password:
              command:
                !Sub |
                    mysqladmin -u root password ${DBRootPassword}
              test:
                !Sub |
                    $(mysql ${DBName} -u root --password=${DBRootPassword} >/dev/null 2>&1 </dev/null); (( $? != 0 ))
            02_create_database:
              command:
                !Sub |
                    mysql -u root --password=${DBRootPassword} <<EndOfSQL
                    CREATE DATABASE ${DBName};
                    CREATE USER '${DBUser}'@'localhost' IDENTIFIED BY '${DBPassword}';
                    GRANT ALL ON ${DBName}.* TO '${DBUser}'@'localhost';
                    FLUSH PRIVILEGES;
                    EndOfSQL
              test:
                !Sub |
                    $(mysql ${DBName} -u root --password=${DBRootPassword} >/dev/null 2>&1 </dev/null); (( $? != 0 ))
            03_configure_wordpress:
              command:
                !Sub |
                        cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php
                        sed -i "s/'database_name_here'/${DBName}/g" wp-config.php
                        sed -i "s/'username_here'/${DBUser}/g" wp-config.php
                        sed -i "s/'password_here'/'${DBPassword}'/g" wp-config.php
                        mv * ..
              cwd: "/var/www/html/wordpress"
    Properties:
      ImageId:
        Fn::FindInMap:
        - AWSRegion2AMI
        - Ref: AWS::Region
        - AMI
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
      - Ref: WebServerSecurityGroup
      KeyName:
        Ref: KeyName
      UserData:
        Fn::Base64:
            !Sub |
                #!/bin/bash -x
                yum update -y aws-cfn-bootstrap
                /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --configsets wordpress_install --region ${AWS::Region}
                /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
Outputs:
  WebsiteURL:
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - WebServer
          - PublicDnsName
    Description: WordPress Website
